{"version":3,"sources":["assets/Icon_location_red.svg","assets/Icon_location_orange.svg","assets/Icon_location_green.svg","assets/Icon_search.svg","assets/img_bg_orange.svg","components/Map/Map.tsx","components/Tab/Tab.tsx","components/SearchInput/SearchInput.tsx","components/SearchBox/SearchBox.tsx","components/HeadImage/HeadImage.tsx","components/PlaceBox/PlaceBox.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Map","allPlace","latitude","longitude","init","Icon","adult","child","allMask","redIcon","L","iconUrl","iconRed","iconAnchor","orangeIcon","iconOrange","greenIcon","iconGreen","map","useRef","useEffect","position","length","current","center","zoom","attribution","addTo","cluster","addLayer","forEach","item","idx","itemPos","geometry","coordinates","pop","minWidth","maxWidth","setLatLng","setContent","name","address","note","phone","updated","adultCount","childCount","mrks","icon","mask_adult","mask_child","bindPopup","on","openPopup","google","document","querySelector","addEventListener","window","open","remove","id","React","memo","isTab","children","click","className","onClick","getValue","src","iconSearch","alt","type","placeholder","onChange","setTab","getTab","isSelect","search","e","target","value","tab","key","setTabs","LeftImage","moment","Date","now","format","day","days","place","setPosition","title","all","maskResultColor","App","useState","location","setLocation","isLoading","setIsLoading","setAllPlace","setIsTab","searchText","setSearchText","start","end","allCount","setAllCount","Promise","navigator","geolocation","getCurrentPosition","pos","a","coords","axios","get","then","res","store","data","features","properties","catch","alert","Fragment","color","height","width","timeout","onScroll","scrollTop","scrollHeight","filter","includes","filterAllPlace","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82c838b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Icon_location_red.abc33708.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon_location_orange.359a86cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon_location_green.b0317730.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon_search.7bf22ceb.svg\";","module.exports = __webpack_public_path__ + \"static/media/img_bg_orange.0a9c376b.svg\";","import React, { useEffect, FunctionComponent, useRef } from 'react';\nimport './Map.scss';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport iconRed from '../../assets/Icon_location_red.svg';\nimport iconOrange from '../../assets/Icon_location_orange.svg';\nimport iconGreen from '../../assets/Icon_location_green.svg';\n\ninterface Props {\n  allPlace: object[],\n  latitude: number,\n  longitude: number,\n  init: boolean,\n}\n\nconst Map: FunctionComponent<Props> = ({ allPlace, latitude, longitude, init }) => {\n  const Icon = (adult: number, child: number) => {\n    const allMask = adult + child;\n    const redIcon = L.icon({\n      iconUrl: iconRed,\n      iconAnchor: [25, 15],\n    });\n    const orangeIcon = L.icon({\n      iconUrl: iconOrange,\n      iconAnchor: [25, 15],\n    });\n    const greenIcon = L.icon({\n      iconUrl: iconGreen,\n      iconAnchor: [25, 15],\n    });\n    if (allMask < 50) {\n      return redIcon;\n    } else if (allMask >= 50 && allMask < 100) {\n      return orangeIcon;\n    } else {\n      return greenIcon;\n    }\n  };\n  const map = useRef<any>(null);\n  useEffect(() => {\n    let position = new L.LatLng(latitude, longitude);\n    if (allPlace.length && latitude && longitude) {\n      map.current = L.map('map', {\n        center: position,\n        zoom: 18,\n      })\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map.current);\n      const cluster = new L.MarkerClusterGroup();\n      map.current.addLayer(cluster);\n      allPlace.forEach((item: any, idx: number) => {\n        let itemPos = new L.LatLng(item.geometry.coordinates[1], item.geometry.coordinates[0]);\n        const pop = L.popup({\n          minWidth: 209,\n          maxWidth: 209,\n        })\n          .setLatLng(itemPos)\n          .setContent(`\n            <div>\n              <div class='font-bold fz-16 text-333 mb-4'>${item.name}</div>\n              <div class='fz-12 text-left mb-4'>${item.address}</div>\n              <div class='fz-12 text-left mb-4'>營業時間｜${item.note || '無標示'}</div>\n              <div class='fz-12 text-left mb-4'>連絡電話｜${item.phone}</div>\n              <div class='fz-12 text-left text-CCC mb-8'>資訊更新於 ${item.updated}</div>\n              <div class='flex-row mb-8'>\n                <div class='orange mr-8'>成人口罩 ${item.adultCount}個</div>\n                <div class='yellow'>兒童口罩 ${item.childCount}個</div>\n              </div>\n              <div class=\"google google-${idx}\">Google 路線導航</div>\n            </div>\n          `);\n\n        const mrks = L.marker(itemPos, { icon: Icon(item.mask_adult, item.mask_child) });\n        cluster.addLayer(mrks);\n        mrks.bindPopup(pop).on('click', function () {\n          pop.openPopup();\n        }).on('popupopen', () => {\n          const google = document.querySelector(`.google-${idx}`);\n          if (google) {\n            google.addEventListener('click', () => {\n              window.open(`https://www.google.com/maps/search/?api=1&query=${item.geometry.coordinates[1]},${item.geometry.coordinates[0]}`);\n            });\n          }\n        });\n        if (item.geometry.coordinates[1] === latitude && item.geometry.coordinates[0] === longitude && !init) {\n          mrks.openPopup();\n        }\n      })\n    }\n    return () => {\n      if (map.current) {\n        map.current.remove();\n      }\n    }\n  }, [allPlace, latitude, longitude, init]);\n  return (\n    <div id=\"map\"></div>\n  )\n}\n\nexport default Map;","import React, { FunctionComponent } from 'react';\nimport './Tab.scss';\n\ninterface Props {\n  isTab: boolean,\n  click: any,\n  children: any,\n}\n\nconst Tabs: FunctionComponent<Props> = ({ isTab, children, click }) => {\n  return (\n    <div className={`tab ${isTab ? 'active' : ''}`} onClick={click}>{children}</div>\n  );\n}\n\nexport default React.memo(Tabs, () => false);\n","import React, { FunctionComponent } from 'react';\nimport './SearchInput.scss';\nimport iconSearch from '../../assets/Icon_search.svg';\n\ninterface Props {\n  getValue: any,\n}\n\nconst SearchInput: FunctionComponent<Props> = ({ getValue }) => {\n  return (\n    <div className='input-wrap'>\n      <img src={iconSearch} alt=\"\" className='icon-search' />\n      <input type=\"text\" className='search' placeholder='請輸入地址' onChange={getValue} />\n    </div>\n  );\n}\n\nexport default React.memo(SearchInput, () => true);\n","import React, { FunctionComponent } from 'react';\nimport './SearchBox.scss';\nimport Tabs from '../Tab/Tab';\nimport SearchInput from '../SearchInput/SearchInput';\n\ninterface Props {\n  getTab: any,\n  setTab: any,\n  isSelect: string,\n  search: any,\n}\n\nconst SearchBox: FunctionComponent<Props> = ({ setTab, getTab, isSelect, search }) => {\n  const tabGroup: string[] = ['所有口罩', '成人口罩', '兒童口罩'];\n\n  const getValue = (e: any): void => {\n    // console.log(e.target.value);\n    search(e.target.value);\n  }\n\n  const setTabs = (tab: string): void => {\n    setTab(tab);\n    getTab(tab);\n  }\n\n  return (\n    <div className=\"search-box\">\n      <SearchInput getValue={getValue} />\n      <div className=\"tabs\">\n        {\n          tabGroup.map(tab => <Tabs key={tab} isTab={isSelect === tab} click={() => setTabs(tab)}>{tab}</Tabs>)\n        }\n      </div>\n      {/* <div className=\"sub\">附近尚有 <span>2</span> 家藥局供應口罩</div> */}\n    </div>\n  );\n}\n\nexport default React.memo(SearchBox, () => false);\n","import React from 'react';\nimport moment from 'moment';\nimport './HeadImage.scss';\n\nimport LeftImage from '../../assets/img_bg_orange.svg';\n\nconst HeadImage = () => {\n  const days = () => {\n    switch (moment().day()) {\n      case 0:\n        return '日';\n      case 1:\n        return '一';\n      case 2:\n        return '二';\n      case 3:\n        return '三';\n      case 4:\n        return '四';\n      case 5:\n        return '五';\n      case 6:\n        return '六';\n      default:\n        break;\n    }\n  }\n  return (\n    <div className='image-wrapper'>\n      <img src={LeftImage} alt=\"\" />\n      <div>{moment(Date.now()).format('YYYY - MM - DD')}</div>\n      <div>星期{days()}</div>\n      <div>身分證末一碼<span>偶數</span>字號者可購買口罩</div>\n      <div>※一週限購一次，每次一人限購兩片</div>\n    </div>\n  );\n}\n\nexport default React.memo(HeadImage, () => true);;\n","import React, { FunctionComponent } from 'react';\n// import moment from 'moment';\nimport './PlaceBox.scss';\n\ninterface Props {\n  place: any,\n  isSelect: string,\n  setPosition: any,\n}\n\nconst PlaceBox: FunctionComponent<Props> = ({ place, isSelect = '所有口罩', setPosition }) => {\n  const allMask = (): number => {\n    return place.adultCount + place.childCount;\n  }\n\n  const maskResultColor = (adult: number, child: number): string => {\n    const all = adult + child;\n    if (all > 100) {\n      return 'green';\n    } else if (all >= 50 && all < 100) {\n      return 'oranges';\n    } else {\n      return 'red';\n    }\n  }\n\n  return (\n    <div className='place-box' onClick={() => setPosition(place)}>\n      <div className='font-bold fz-16 text-333 mb-4'>{place.title}</div>\n      <div className='mb-4'>{place.address}</div>\n      <div className='fz-12 mb-8'>營業時間｜{place.note||'無標示'}</div>\n      <div className='flex-row'>\n        {\n          (isSelect === '所有口罩' || isSelect === '成人口罩') && place.adultCount > 0 ?\n            <div className='flex-row justify-between orange mr-8'>\n              <div className='text'>成人口罩</div>\n              <div className='text'>{place.adultCount}個</div>\n            </div> : isSelect === '兒童口罩' || allMask() === 0 ? null : <div className='no-mask mr-8'>口罩缺貨中</div>\n        }\n        {\n          (isSelect === '所有口罩' || isSelect === '兒童口罩') && place.childCount > 0 ?\n            <div className='flex-row justify-between yellow'>\n              <div className='text'>兒童口罩</div>\n              <div className='text'>{place.childCount}個</div>\n            </div> : isSelect === '成人口罩' || allMask() === 0 ? null : <div className='no-mask mr-8'>口罩缺貨中</div>\n        }\n        {\n          allMask() === 0 ? <div className='no-mask mr-8'>口罩缺貨中</div> : null\n        }\n      </div>\n      <div className={`triangle ${maskResultColor(place.adultCount, place.childCount)}`}></div>\n    </div>\n  );\n}\n\nexport default React.memo(PlaceBox, () => false);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport axios from 'axios';\nimport Map from './components/Map/Map';\nimport SearchBox from './components/SearchBox/SearchBox';\nimport HeadImage from './components/HeadImage/HeadImage';\nimport PlaceBox from './components/PlaceBox/PlaceBox';\ninterface iAllPlace {\n  id: string,\n  title: string,\n  address: string,\n  // startTime: number,\n  // endTime: number,\n  adultCount: number,\n  childCount: number,\n}\ninterface iAllCount {\n  start: number,\n  end: number,\n}\ninterface iLocation {\n  latitude: number,\n  longitude: number,\n  init: boolean,\n}\n\nconst App = () => {\n  const [location, setLocation] = useState<iLocation>({\n    latitude: 0,\n    longitude: 0,\n    init: true,\n  });\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [allPlace, setAllPlace] = useState<iAllPlace[]>([]);\n  const [isTab, setIsTab] = useState<string>('所有口罩');\n  const [searchText, setSearchText] = useState<string>('');\n  const [allCount, setAllCount] = useState<iAllCount>({\n    start: 30,\n    end: 0,\n  });\n\n  const getTab = (tab: string) => {\n    setIsTab(tab);\n  }\n\n  const filterAllPlace = () => {\n    const { start, end } = allCount;\n    if (searchText) {\n      return allPlace.filter(item => item.title.includes(searchText) || item.address.includes(searchText));\n    }\n    if (start && end) {\n      return allPlace.filter((item: any, idx: number) => idx < start && end > idx);\n    }\n    return allPlace.filter((item: any, idx: number) => idx < start);\n  };\n\n  const scrolling = (e: any) => {\n    if (allCount.start > allPlace.length || searchText) return;\n    let top = e.target.scrollTop;\n    let height = e.target.scrollHeight;\n    if (top / height * 100 > 70) setAllCount({ start: allCount.start + 30, end: allCount.end + 30 });\n  }\n\n  const search = (e: string) => {\n    setSearchText(e);\n  }\n\n  const getGeolocation = () => {\n    navigator.geolocation.getCurrentPosition(async (pos) => {\n      setLocation({\n        latitude: pos.coords.latitude,\n        longitude: pos.coords.longitude,\n        init: true,\n      });\n      setIsLoading(false);\n    });\n  }\n\n  const getMaskData = () => {\n    setIsLoading(true);\n    axios.get('https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json').then(res => {\n      let store = res.data.features.map((item: any) => {\n        return {\n          geometry: item.geometry,\n          ...item.properties,\n          title: item.properties.name,\n          adultCount: item.properties.mask_adult,\n          childCount: item.properties.mask_child,\n        };\n      });\n      setAllPlace(store);\n    }).catch(() => {\n      alert('系統發生錯誤，請再重試');\n      setIsLoading(false);\n    });\n  }\n\n  const setPosition = (e:any) => {\n    setLocation({\n      latitude: e.geometry.coordinates[1],\n      longitude: e.geometry.coordinates[0],\n      init: false,\n    });\n  }\n\n  useEffect(() => {\n    Promise.all([getGeolocation(), getMaskData()]);\n  }, []);\n\n  return (\n    <React.Fragment>\n      {\n        isLoading ?\n          <div className='relative'>\n            <Loader\n              type=\"ThreeDots\"\n              color=\"orange\"\n              height={100}\n              width={100}\n              timeout={3000000}\n            />\n          </div>\n          :\n          <div className=\"App\">\n            <div className=\"left\">\n              <HeadImage />\n              <SearchBox search={search} setTab={() => setIsTab(isTab)} getTab={getTab} isSelect={isTab} />\n              <div className=\"place-box-wrap\" onScroll={scrolling}>\n                {\n                  filterAllPlace().map(place => <PlaceBox key={place.id} place={place} isSelect={isTab} setPosition={setPosition}/>)\n                }\n              </div>\n            </div>\n            <div className=\"right\">\n              <Map init={location.init} latitude={location.latitude} longitude={location.longitude} allPlace={allPlace} />\n            </div>\n          </div>\n      }\n\n\n    </React.Fragment>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}